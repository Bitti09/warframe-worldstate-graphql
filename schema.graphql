scalar MissionType
scalar Region
scalar DateTime
scalar Ids
scalar Faction
scalar Test
scalar LangString

type Query {
  "WorldSeed"
  WorldSeed(platform: String!): String
  "MobileVersion"
  MobileVersion(platform: String!): String
  "BuildLabel"
  BuildLabel(platform: String!): String
  "Active Missions"
  ActiveMissions(platform: String!): [ActiveMissions!]!
  "SyndicateMissions"
  SyndicateMissions(
    withjobsonly: Boolean
    platform: String!
  ): [SyndicateMissions]
  "GlobalUpgrades"
  GlobalUpgrades(platform: String!): [String]
  "FlashSales"
  FlashSales(platform: String!): [FlashSales]
  "Invasions"
  Invasions(platform: String!, lang: String): [Invasions]
  "HubEvents"
  HubEvents(platform: String!): [String]
  "NodeOverrides"
  NodeOverrides(platform: String!): [NodeOverrides]
  "BadlandNodes"
  BadlandNodes(platform: String!): [BadlandNodes]
  "Current Version"
  Version(platform: String!): Float!
  "Void Trader"
  VoidTraders(platform: String!): [VoidTraders]
  "PrimeAccessAvailability"
  PrimeAccessAvailability(platform: String!): PrimeAccessAvailability
  "PrimeVaultAvailabilities"
  PrimeVaultAvailabilities(platform: String!): [String]
  "DailyDeals from Davo"
  DailyDeals(platform: String!): DailyDeals
  "LibraryInfo"
  LibraryInfo(platform: String!): LibraryInfo
  "PVPChallengeInstances"
  PVPChallengeInstances(platform: String!): PVPChallengeInstances
  "PersistentEnemies"
  PersistentEnemies(platform: String!): [String]
  "PVPAlternativeModes"
  PVPAlternativeModes(platform: String!): [String]
  "PVPActiveTournaments"
  PVPActiveTournaments(platform: String!): [String]
  "ProjectPct"
  ProjectPct(platform: String!): [Float]
  "ConstructionProjects"
  ConstructionProjects(platform: String!): [String]
  "TwitchPromos"
  TwitchPromos(platform: String!): [String]
  "WeeklyChallenges"
  WeeklyChallenges(platform: String!): WeeklyChallenges
  "API Data: Time"
  Time(platform: String!): String!
  "API Data: Date"
  Date(platform: String!): String!
  "Current Events"
  Events(lang: String, platform: String!): [Events!]!
  "Current Alerts"
  Alerts(showexpired: Boolean, platform: String!, lang: String): [Alerts!]
  "Current Events"
  Goals(platform: String!, lang: String): [Goals!]
}

type WeeklyChallenges {
  Challenges: [Challenges]
  id: Ids!
  Activation: DateTime
  Expiry: DateTime
}

type PVPChallengeInstances {
  Category: String
  id: Ids!
  startDate: DateTime
  PVPMode: String
  isGenerated: Boolean
  subChallenges: [String]
  endDate: DateTime
  challengeTypeRefID: String
  params: [Params]
}

type LibraryInfo {
  LastCompletedTargetType: String
}

type DailyDeals {
  StoreItem: String
  Activation: DateTime
  Expiry: DateTime
  Discount: Float
  OriginalPrice: Float
  SalePrice: Float
  AmountTotal: Float
  AmountSold: Float
}

type PrimeAccessAvailability {
  State: String
}
type VoidTraders {
  id: Ids!
  Activation: DateTime
  Expiry: DateTime
  Character: String!
  Node: String!
  Manifest: [Manifest]
}

type BadlandNodes {
  DefenderInfo: DefenderInfo!
  Node: String!
  id: Ids!
}

type NodeOverrides {
  id: Ids!
  Node: Region!
  Hide: Boolean
  Seed: String
  LevelOverride: Region
  Activation: DateTime
}
type Invasions {
  Faction: Faction!
  LocTag: Region!
  DefenderReward: DefenderReward!
  Completed: Boolean!
  Node: String!
  Goal: Float!
  AttackerMissionInfo: AttackerMissionInfo!
  id: Ids!
  Count: Float!
  AttackerReward: AttackerReward!
  DefenderMissionInfo: DefenderMissionInfo!
  Activation: DateTime!
}
type FlashSales {
  Popular: Boolean!
  EndDate: DateTime!
  PremiumOverride: Float!
  BogoGet: Float!
  Featured: Boolean!
  BannerIndex: Float!
  RegularOverride: Float!
  BogoBuy: Float!
  StartDate: DateTime!
  Discount: Float!
  TypeName: LangString!
  ShowInMarket: Boolean!
  ProductExpiryOverride: DateTime
}

type SyndicateMissions {
  Activation: DateTime!
  Expiry: DateTime!
  Tag: String!
  Seed: Float!
  Jobs: [Jobs]
  Nodes: [String!]!
  id: Ids!
}
type Events {
  Priority: Boolean!
  MobileOnly: Boolean!
  Messages: [Messages]
  Prop: String!
  Date: DateTime!
  ImageUrl: String
}
type Alerts {
  id: Ids!
  Activation: DateTime!
  Expiry: DateTime!
  MissionInfo: MissionInfo!
  Tag: String
}
type ActiveMissions {
  id: Ids!
  Modifier: String!
  Region: Region!
  Seed: Float!
  Activation: DateTime!
  Expiry: DateTime!
  Node: String!
  MissionType: MissionType!
}
type Goals {
  id: Ids! # 5bc9e8f7972d7d184c8398c9"
  Activation: DateTime!
  Expiry: DateTime!
  Count: String
  GoalInterim: String
  Goal: String
  Success: String
  Personal: Boolean
  Bounty: Boolean
  Tag: String
  Faction: Faction
  Desc: LangString # needs tanslate
  ToolTip: LangString # needs tanslate
  Icon: String # needs tanslate
  ClampNodeScores: String # '?'
  Node: Region
  MissionKeyName: LangString
  ConcurrentMissionKeyNames: LangString
  ConcurrentNodeReqs: String # better unwrap needed
  ConcurrentNodes: String # better unwrap needed
  RewardInterim: RewardInterim
  Reward: Reward
  # current inactive nodes _> untested
  Jobs: [Jobs]
  HealthPct: Float
  JobAffiliationTag: String!
  VictimNode: String!
  RegionIdx: Float!
}

# Types

type Script {
  Function: String!
  _faction: String!
  Script: String!
}

type Challenges {
  Type: String
  MinimumEnemyLevel: Float
  RequiredCount: Float
  ProgressIndicatorFreq: Float
  DamageType: String
  Script: Script
}

type Params {
  n: String
  v: Float
}

type Manifest {
  ItemType: LangString
  PrimePrice: Float
  RegularPrice: Float
}
type DefenderInfo {
  IsAlliance: Boolean
  Id: Ids
  Name: String
  MOTD: String
  DeployerName: String
  DeployerClan: String
}
type AttackerMissionInfo {
  seed: Float!
  faction: Faction!
}
type AttackerReward {
  countedItems: [CountedItems]
}
type DefenderReward {
  countedItems: [CountedItems]
}
type CountedItems {
  ItemType: LangString!
  ItemCount: Float!
}
type DefenderMissionInfo {
  faction: Faction!
  seed: Float!
}
type Jobs {
  rewards: String
  masteryReq: Int
  minEnemyLevel: Int
  maxEnemyLevel: Int
  xpAmounts: [Int]
  jobType: LangString
}

type MissionInfo {
  faction: String!
  location: String!
  missionReward: MissionReward!
  missionType: String!
  levelOverride: String!
  minEnemyLevel: Float!
  maxEnemyLevel: Float!
  nightmare: Boolean!
  enemySpec: String!
  difficulty: Float!
  seed: Float!
}

type MissionReward {
  credits: Float!
  countedItems: [CountedItems]
  items: [String]
}

type Messages {
  Message: String!
  LanguageCode: String!
}

type Reward {
  credits: Float!
  xp: Float!
  items: [LangString!]!
  countedItems: [String!]!
}
type RewardInterim {
  items: [String!]!
  countedItems: [String!]!
  credits: Float!
  xp: Float!
}
